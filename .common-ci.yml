default:
  image: docker:stable
  services:
    - docker:stable-dind

variables:
  # this is used because CI_PROJECT_NAME is not the same
  # as the image name used for this project
  IMAGE_NAME: "container-toolkit"

# Define the following dummy targets for specifying make targets through the TARGET variable
.target-ubuntu16:
  variables:
    TARGET: ubuntu16.04

.target-ubuntu18:
  variables:
    TARGET: ubuntu18.04

.target-ubi8:
  variables:
    TARGET: ubi8

# The .build step forms the base of the image builds with each variant
# defined as a build-${VARIANT} step.
.build:
  stage: build
  variables:
    REGISTRY: "${CI_REGISTRY_IMAGE}"
    VERSION: "${CI_COMMIT_SHA}"
  before_script:
    - apk add make
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
  script:
    - make build-${TARGET}
    - make push-${TARGET}

build-ubuntu16:
  extends:
    - .build
    - .target-ubuntu16

build-ubuntu18:
  extends:
    - .build
    - .target-ubuntu18

build-ubi8:
  extends:
    - .build
    - .target-ubi8

# .deploy forms the base of the deployment jobs which push images to the CI registry.
# This is extended with the version to be deployed (e.g. the SHA or TAG) and the
# target os.
.deploy:
  stage: deploy
  variables:
    REGISTRY: "${CI_REGISTRY_IMAGE}"
  before_script:
    - apk add --no-cache make bash
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
    - docker pull "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${CI_COMMIT_SHA}-${TARGET}"
  script:
    # In the case where we are deploying a different version to the CI_COMMIT_SHA, we
    # need to tag the image
    - docker tag "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${CI_COMMIT_SHA}-${TARGET}" "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${VERSION}-${TARGET}"
    - docker push "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${VERSION}-${TARGET}"

# .deploy:sha sets the internal deployment version to the git SHA
.deploy:sha:
  extends: .deploy
  variables:
    VERSION: "${CI_COMMIT_SHA}"

# .deploy:sha sets the internal deployment version to the git TAG
# A leading v is stripped
.deploy:tag:
  allow_failure: true
  extends: .deploy
  script:
    - echo ${CI_COMMIT_TAG}
    - echo ${CI_COMMIT_REF_NAME}
    - VERSION=${CI_COMMIT_TAG#v}
    - 'echo Version: $VERSION ; [[ -n "$VERSION" ]] || exit 1'
    # In the case where we are deploying a different version to the CI_COMMIT_SHA, we
    # need to tag the image
    - docker tag "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${CI_COMMIT_SHA}-${TARGET}" "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${VERSION}-${TARGET}"
    - docker push "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${VERSION}-${TARGET}"

deploy:sha-ubuntu16:
  extends:
    - .deploy:sha
    - .target-ubuntu16

deploy:sha-ubuntu18:
  extends:
    - .deploy:sha
    - .target-ubuntu18

deploy:sha-ubi8:
  extends:
    - .deploy:sha
    - .target-ubi8

deploy:tag-ubuntu16:
  extends:
    - .deploy:tag
    - .target-ubuntu16

deploy:tag-ubuntu18:
  extends:
    - .deploy:tag
    - .target-ubuntu18

deploy:tag-ubi8:
  extends:
    - .deploy:tag
    - .target-ubi8
