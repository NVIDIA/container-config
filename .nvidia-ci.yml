---
##
## Variables that control where build artifacts are places for scanning and testing:
## CI_REGISTRY
## CI_REGISTRY_IMAGE
## CI_REGISTRY_USER
## CI_REGISTRY_PASSWORD
##
## Variables that control where release artifacts go:
## NGC_REGISTRY
## NGC_REGISTRY_IMAGE
## NGC_REGISTRY_USER
## NGC_REGISTRY_TOKEN
## REGISTRY_TOKEN
## REGISTRY_USER
## REGISTRY_IMAGE
## DOCKERHUB_REGISTRY

# We include the public gitlab CI definition to reuse the steps defined there
include:
  - local: '.common-ci.yml'

default:
  tags:
    - type/docker
    - docker/privileged
    - cnt
    - container-dev
    - os/linux

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  # Release "latest"-tagged images off the master branch
  RELEASE_LATEST_BRANCH: "master"

stages:
  - build
  - test
  - scan
  - deploy
  - release

# Note: The integration tests are disabled for this repository.
# Here we fail them, but allow the pipeline to continue.
skipped_integration:
  stage: test
  script:
    - echo "Tests are not enabled"
    - exit 0

# The .scan step forms the base of the image scan operation performed before releasing
# images.
.scan:
  stage: scan
  variables:
    REGISTRY: "${CI_REGISTRY_IMAGE}"
    VERSION: "${CI_COMMIT_SHA}"
    # Define both OUT_IMAGE and OUT_IMAGE_TAG to allow for these to be used when scanning the
    # "local" (tagged) image
    OUT_IMAGE_TAG: "${CI_COMMIT_SHA}-${TARGET}"
    OUT_IMAGE: "${IMAGE_NAME}"
  except:
    variables:
    - $CI_COMMIT_MESSAGE =~ /\[skip[ _-]scans?\]/i
    - $SKIP_SCANS
  before_script:
    - apk add --no-cache git
    - apk add --no-cache python3 python3-dev py3-pip py3-wheel libmagic
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
    - docker pull "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${CI_COMMIT_SHA}-${TARGET}"
    - docker tag "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${CI_COMMIT_SHA}-${TARGET}" "${OUT_IMAGE}:${OUT_IMAGE_TAG}"
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab-master.nvidia.com/sectooling/scanning/contamer.git
    - pip3 install -r contamer/requirements.txt
  script:
    - cd contamer
    - python3 contamer.py -ls --fail-on-non-os ${CONTAMER_SUPPRESS_VULNS:+--suppress-vulns ${CONTAMER_SUPPRESS_VULNS}} -- "${OUT_IMAGE}:${OUT_IMAGE_TAG}"

scan-centos7:
  extends:
    - .scan
    - .target-centos7

scan-centos8:
  extends:
    - .scan
    - .target-centos8

scan-ubuntu16:
  extends:
    - .scan
    - .target-ubuntu16

scan-ubuntu18:
  extends:
    - .scan
    - .target-ubuntu18

scan-ubi8:
  extends:
    - .scan
    - .target-ubi8

# Define the external release steps for NGC and Dockerhub
.release:ngc:
  extends: .release:external
  variables:
    OUT_REGISTRY_USER: "${NGC_REGISTRY_USER}"
    OUT_REGISTRY_TOKEN: "${NGC_REGISTRY_TOKEN}"
    OUT_REGISTRY: "${NGC_REGISTRY}"
    OUT_IMAGE: "${NGC_REGISTRY_IMAGE}"

.release:dockerhub:
  extends: .release:external
  variables:
    OUT_REGISTRY_USER: "${REGISTRY_USER}"
    OUT_REGISTRY_TOKEN: "${REGISTRY_TOKEN}"
    OUT_REGISTRY: "${DOCKERHUB_REGISTRY}"
    OUT_IMAGE: "${REGISTRY_IMAGE}"

release:ngc-centos7:
  extends:
    - .release:ngc
    - .target-centos7
  dependencies:
    - deploy:sha-ci-centos7
    - scan-centos7

release:ngc-centos8:
  extends:
    - .release:ngc
    - .target-centos8
  dependencies:
    - deploy:sha-ci-centos8
    - scan-centos8

release:ngc-ubuntu16:
  extends:
    - .release:ngc
    - .target-ubuntu16
  dependencies:
    - deploy:sha-ci-ubuntu16
    - scan-ubuntu16

release:ngc-ubuntu18:
  extends:
    - .release:ngc
    - .target-ubuntu18
  dependencies:
    - deploy:sha-ci-ubuntu18
    - scan-ubuntu18

release:ngc-ubi8:
  extends:
    - .release:ngc
    - .target-ubi8
  dependencies:
    - deploy:sha-ci-ubi8
    - scan-ubi8

release:dockerhub-centos7:
  extends:
    - .release:dockerhub
    - .target-centos7
  dependencies:
    - deploy:sha-ci-centos7
    - scan-centos7

release:dockerhub-centos8:
  extends:
    - .release:dockerhub
    - .target-centos8
  dependencies:
    - deploy:sha-ci-centos8
    - scan-centos8

release:dockerhub-ubuntu16:
  extends:
    - .release:dockerhub
    - .target-ubuntu16
  dependencies:
    - deploy:sha-ci-ubuntu16
    - scan-ubuntu16

release:dockerhub-ubuntu18:
  extends:
    - .release:dockerhub
    - .target-ubuntu18
  dependencies:
    - deploy:sha-ci-ubuntu18
    - scan-ubuntu18

release:dockerhub-ubi8:
  extends:
    - .release:dockerhub
    - .target-ubi8
  dependencies:
    - deploy:sha-ci-ubi8
    - scan-ubi8

