image: docker:stable

services:
  - docker:stable-dind

stages:
  - build
  - test
  - release

# The .build step forms the base of the image builds with each variant
# defined as a build-${VARIANT} step.
.build:
  stage: build
  variables:
    REGISTRY: "${CI_REGISTRY_IMAGE}"
    VERSION: "${CI_COMMIT_SHA}"
  before_script:
    - apk add make
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
    - echo "Building ${CI_REGISTRY_IMAGE}/container-toolkit:${VERSION}-${TARGET}"
  script:
    - make build-${TARGET}
    - make push-${TARGET}

build-ubuntu16:
  extends: .build
  variables:
    TARGET: ubuntu16.04

build-ubuntu18:
  extends: .build
  variables:
    TARGET: ubuntu18.04

build-ubi8:
  extends: .build
  variables:
    TARGET: ubi8


# A base step for defining integration tests.
.integration:
  stage: test
  variables:
    VERSION: "${CI_COMMIT_SHA}"
    IMAGE: "${IMAGE_NAME}"
  except:
    variables:
    - $CI_COMMIT_MESSAGE =~ /\[skip[ _-]tests?\]/i
    - $SKIP_TESTS
  before_script:
    - apk add make bash jq
    - docker login -u "${CI_REGISTRY_USER}" -p "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"
    - docker pull "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${VERSION}-${TARGET}"
    - docker tag "${CI_REGISTRY_IMAGE}/${IMAGE_NAME}:${VERSION}-${TARGET}" "${IMAGE_NAME}:${VERSION}-${TARGET}"
  script:
    - make test-${TARGET}

integration-ubuntu16:
  extends: .integration
  variables:
    TARGET: ubuntu16.04
    SKIP_TESTS: "true"

integration-ubuntu18:
  extends: .integration
  variables:
    TARGET: ubuntu18.04

integration-ubi8:
  extends: .integration
  variables:
    TARGET: ubi8
    SKIP_TESTS: "true"

release:
  stage: release
  only:
    - tags
  script:
    - apk add make
    - docker login -u "${REGISTRY_USER}" -p "${REGISTRY_TOKEN}"

    - make VERSION="${CI_COMMIT_TAG#v}" all
    - make VERSION="${CI_COMMIT_TAG#v}" push
    - make VERSION="${CI_COMMIT_TAG#v}" push-short
    - make VERSION="${CI_COMMIT_TAG#v}" push-latest
